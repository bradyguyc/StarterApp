<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="MyNextBook.Views.ImportCSV"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:core="clr-namespace:Syncfusion.Maui.Core;assembly=Syncfusion.Maui.Core"
    xmlns:dx="http://schemas.devexpress.com/maui"
    xmlns:dx1="clr-namespace:DevExpress.Maui.Core;assembly=DevExpress.Maui.Core"
    xmlns:dxco="clr-namespace:DevExpress.Maui.Controls;assembly=DevExpress.Maui.Controls"
    xmlns:dxcv="clr-namespace:DevExpress.Maui.CollectionView;assembly=DevExpress.Maui.CollectionView"
    xmlns:dxe="clr-namespace:DevExpress.Maui.Editors;assembly=DevExpress.Maui.Editors"
    xmlns:dxs="http://schemas.devexpress.com/maui"
    xmlns:fonts="clr-namespace:CommonCode.Helpers;assembly=CommonCode"
    xmlns:local="clr-namespace:MyNextBook.ViewModels"
    xmlns:markups="clr-namespace:OnScreenSizeMarkup.Maui;assembly=OnScreenSizeMarkup.Maui"
    xmlns:models="clr-namespace:MyNextBook.Models"
    xmlns:popup="clr-namespace:Syncfusion.Maui.Popup;assembly=Syncfusion.Maui.Popup"
    xmlns:progressBar="clr-namespace:Syncfusion.Maui.ProgressBar;assembly=Syncfusion.Maui.ProgressBar"
    xmlns:sharedcontrols="clr-namespace:CommonCode.CustomControls;assembly=CommonCode"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:viewmodels="clr-namespace:MyNextBook.ViewModels"
    xmlns:views="clr-namespace:MyNextBook.Views"
    x:Name="ImportPage"
    Title="Import Series"
    x:DataType="viewmodels:ImportCSVViewModel"
    BackgroundColor="{dx:ThemeColor SecondaryContainer}">

    <Shell.BackButtonBehavior>
        <!--  Handle back via Shell back button  -->
        <BackButtonBehavior Command="{Binding BackCommand}" IsEnabled="True" />
    </Shell.BackButtonBehavior>


    <ContentPage.Resources>
        <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        <toolkit:BoolToObjectConverter
            x:Key="BoolToMatchStatus"
            FalseObject="Unmatched"
            TrueObject="Matched" />
        <Style TargetType="Label">
            <Setter Property="TextColor" Value="{dx:ThemeColor OnSecondaryContainer}" />
            <Setter Property="BackgroundColor" Value="{dx:ThemeColor SecondaryContainer}" />
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="BackgroundColor" Value="{dx:ThemeColor TertiaryContainer}" />
        </Style>

    </ContentPage.Resources>



    <!--#region Import Get File-->
    <Grid
        BackgroundColor="{dx:ThemeColor SecondaryContainer}"
        ColumnDefinitions="*,100"
        RowDefinitions="*,75">
        <dx:DXPopup
            x:Name="menuPopup"
            CornerRadius="0"
            IsOpen="{Binding IsMenuPopupOpen, Mode=TwoWay}"
            Placement="Left"
            PlacementTarget="{x:Reference menuButton}">
            <dx:DXPopup.Content>
                <StackLayout Padding="0" BackgroundColor="{dx:ThemeColor Surface}">

                    <dx:DXButton
                        BackgroundColor="{dx:ThemeColor Secondary}"
                        BorderColor="{dx:ThemeColor Outline}"
                        BorderThickness="1"
                        Command="{Binding ImportReadyItemsCommand}"
                        Content="Import Ready Items"
                        CornerRadius="4"
                        FontSize="14"
                        HorizontalOptions="Fill"
                        TextColor="{dx:ThemeColor OnSecondary}"
                        VerticalOptions="Center" />
                    <dx:DXButton
                        BackgroundColor="{dx:ThemeColor Secondary}"
                        BorderColor="#0078D7"
                        BorderThickness="1"
                        Command="{Binding SaveAndReturnLaterCommand}"
                        Content="Save &amp; Return Later"
                        CornerRadius="4"
                        FontSize="14"
                        HorizontalOptions="Fill"
                        TextColor="{dx:ThemeColor OnSecondary}"
                        VerticalOptions="Center" />
                    <dx:DXButton
                        BackgroundColor="{dx:ThemeColor Secondary}"
                        BorderColor="{dx:ThemeColor Outline}"
                        BorderThickness="1"
                        Command="{Binding CancelImportCommand}"
                        Content="Cancel"
                        CornerRadius="4"
                        FontSize="14"
                        HorizontalOptions="Fill"
                        TextColor="{dx:ThemeColor OnSecondary}"
                        VerticalOptions="Center" />
                </StackLayout>
            </dx:DXPopup.Content>
        </dx:DXPopup>

        <!--#region ErrorPopUp-->
        <sharedcontrols:ErrorPopupView
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            ControlTemplate="{StaticResource ErrorPopupStandard}"
            ErrorCode="{Binding PopupDetails.ErrorCode}"
            ErrorMessage="{Binding PopupDetails.ErrorMessage}"
            ErrorReason="{Binding PopupDetails.ErrorReason}"
            HeightRequest="1"
            ShowErrorPopup="{Binding PopupDetails.IsOpen, Mode=TwoWay}"
            WidthRequest="1" />


        <!--#endregion-->
        <dxs:DataGridView
            x:Name="gridControl"
            Grid.Row="0"
            Grid.RowSpan="1"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            AllowVirtualHorizontalScrolling="True"
            AutoGeneratingColumn="DataGridView_OnAutoGeneratingColumn"
            BackgroundColor="{dx:ThemeColor PrimaryContainer}"
            ColumnHeaderHeight="60"
            CustomGroupDisplayText="gridControl_CustomGroupDisplayText"
            EditorShowMode="Tap"
            EnableImmediatePosting="True"
            IsHorizontalScrollBarVisible="True"
            IsReadOnly="false"
            IsVerticalScrollBarVisible="True"
            IsVisible="{Binding ShowImporting}"
            ItemsSource="{Binding iCSVData.CsvData}"
            ShowGroupedColumns="True"
            ValidateAndSave="gridControl_ValidateAndSave">

            <dxs:DataGridView.ColumnHeaderAppearance>
                <dxs:ColumnHeaderAppearance Padding="0,0,0,0" BackgroundColor="{dx:ThemeColor PrimaryContainer}" />
            </dxs:DataGridView.ColumnHeaderAppearance>
        </dxs:DataGridView>
        <HorizontalStackLayout
            Grid.Row="1"
            Grid.Column="0"
            Margin="5,2">
            <Button
                Command="{Binding PerformImportCommand}"
                CommandParameter="{x:Reference gridControl}"
                FontSize="Small"
                HeightRequest="40"
                IsEnabled="True"
                IsVisible="{Binding ShowInitial}"
                Text="Select File"
                WidthRequest="150" />
            <Button
                Margin="5,0"
                Command="{Binding CancelImportCommand}"
                HeightRequest="40"
                IsVisible="{Binding ShowInitial}"
                Text="Cancel"
                WidthRequest="150" />
        </HorizontalStackLayout>
        <HorizontalStackLayout Grid.Row="1" Grid.Column="1">
            <ImageButton
                x:Name="helpButton"
                Aspect="Center"
                BackgroundColor="{dx:ThemeColor SecondaryContainer}"
                Command="{Binding ShowHelpCommand}"
                HeightRequest="45"
                VerticalOptions="Center"
                WidthRequest="45">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Glyph="{x:Static fonts:IconCodesMIR.Help}"
                        Size="30"
                        Color="{dx:ThemeColor OnSecondaryContainer}" />
                </ImageButton.Source>
            </ImageButton>
            <ImageButton
                x:Name="menuButton"
                Aspect="Center"
                BackgroundColor="{dx:ThemeColor SecondaryContainer}"
                Command="{Binding ShowMenuCommand}"
                HeightRequest="45"
                IsVisible="{Binding ShowImporting}"
                VerticalOptions="Center"
                WidthRequest="45">
                <ImageButton.Source>
                    <FontImageSource
                        FontFamily="MD"
                        Glyph="{x:Static fonts:IconCodesMIR.Menu}"
                        Size="30"
                        Color="{dx:ThemeColor OnSecondaryContainer}" />
                </ImageButton.Source>
            </ImageButton>
        </HorizontalStackLayout>
        <VerticalStackLayout
            Grid.Row="1"
            Grid.Column="0"
            IsVisible="{Binding ShowImport}">
            <Label Text="{Binding iCSVData.SeriesFound, StringFormat='{0} series to import ,'}" />
            <Label Text="{Binding iCSVData.SeriesThatAreReadyToImport, StringFormat=' {0} ready.'}" />

        </VerticalStackLayout>
        <dx:RadialProgressBar
            x:Name="progressBar"
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            EndValue="100"
            Fill="{dx:ThemeColor OnSecondary}"
            HeightRequest="200"
            HorizontalOptions="Center"
            IsVisible="{Binding ShowImportProgress}"
            StartAngle="-90"
            StartValue="0"
            SweepAngle="360"
            ValueIndicatorFill="{dx:ThemeColor Secondary}"
            VerticalOptions="Center"
            WidthRequest="200"
            Value="{Binding ImportProgressValue}">

            <dx:RadialProgressBar.Content>


                <Label
                    FontSize="16"
                    HorizontalOptions="Center"
                    Text="{Binding ImportProgressText}"
                    VerticalOptions="Center" />


            </dx:RadialProgressBar.Content>
        </dx:RadialProgressBar>




    </Grid>




</ContentPage>
